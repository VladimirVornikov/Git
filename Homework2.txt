<<<<<<< HEAD
1. Как отказаться от изменений в файле (файлах) находящихся в рабочем каталоге?
git checkout .

2. Как вернуть файл из индекса в рабочий каталог?
git reset HEAD^^

3. Как отменить ошибочный commit ?
git revert <идентификатор коммита>

4. Как исправить коммит, отправленный на сервер GitHub?
git commit --amend -m
git push --force (не использвать)

5. Как создать новую ветку и переключится в нее?
git checkout -b <имя ветки>

6. В чем отличение между fast-forward merge  and non fast-forfard merge?
Fast-forward merge - когда история изменений в ветке, которую вы хотите слить, линейна относительно текущей ветки, изменения из одной ветки могут быть
просто добавлены к другой без создания дополнительного коммита слияния. 
Non fast-forward merge - когда история изменений не линейна, и требуется создание дополнительного коммита слияния для объединения изменений.

6. Когда может возникнуть конфликт слияния веток, как  его разрешить?

Конфликт возникнуть в том случае, когда Git не может автоматически объединить изменения из двух разных веток. Это происходит, когда две ветки внесли изменения в 
одни и те же участки кода в разными способами.
Чтобы решить данный конфликт, нужно зайти в конфликтующий файл посредством текстового редактора, удалить маркеры конфликта, и оставить изменения, которые мы 
хотим. Сохранить файл -> git add . -> git commit -m -> git merge <название ветки>

7. Можно ли удалить ветку? Как? 
=======
1. Как отказаться от изменений в файле (файлах) находящихся в рабочем каталоге?
git checkout .

2. Как вернуть файл из индекса в рабочий каталог?
git reset HEAD^^

3. Как отменить ошибочный commit ?
git revert <идентификатор коммита>

4. Как исправить коммит, отправленный на сервер GitHub?
git commit --amend -m
git push --force (не использвать)

5. Как создать новую ветку и переключится в нее?
git checkout -b <имя ветки>

6. В чем отличение между fast-forward merge  and non fast-forfard merge?
Fast-forward merge - когда история изменений в ветке, которую вы хотите слить, линейна относительно текущей ветки, изменения из одной ветки могут быть
просто добавлены к другой без создания дополнительного коммита слияния. 
Non fast-forward merge - когда история изменений не линейна, и требуется создание дополнительного коммита слияния для объединения изменений.

6. Когда может возникнуть конфликт слияния веток, как  его разрешить?

Конфликт возникнуть в том случае, когда Git не может автоматически объединить изменения из двух разных веток. Это происходит, когда две ветки внесли изменения в 
одни и те же участки кода в разными способами.
Чтобы решить данный конфликт, нужно зайти в конфликтующий файл посредством текстового редактора, удалить маркеры конфликта, и оставить изменения, которые мы 
хотим. Сохранить файл -> git add . -> git commit -m -> git merge <название ветки>

7. Можно ли удалить ветку? Как? 
>>>>>>> 23394bb5a75fd0cd14f781c9b65d0df91de9e6b9
git branch -d <название ветки>